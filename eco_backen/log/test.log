  [1m[35m (1.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "environment"]]
  [1m[36mActiveRecord::InternalMetadata Create (3.1ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ('environment', 'test', '2024-12-19 04:24:58.962221', '2024-12-19 04:24:58.962224') RETURNING "key"[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to EconTable (20241218231309)
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.4ms)[0m  [1m[35mCREATE TABLE "econ_tables" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "acronym" varchar(3) NOT NULL, "name" varchar(255), "imgUrl" varchar(255), "gross" integer, "trade" integer, "expenditure" integer, "reserve" integer, "status" varchar, "co" integer, "iso" integer, "ant" integer, "state" integer, "ind" integer, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20241218231309') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateEcons (20241219020721)
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE TABLE "econs" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20241219020721') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mcommit transaction[0m
Migrating to AiTable (20241219020755)
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.5ms)[0m  [1m[35mCREATE TABLE "econ_table" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "acronym" varchar(3) NOT NULL, "name" varchar(255), "imgUrl" varchar(255), "gross" integer, "trade" integer, "status" varchar, "co" integer, "iso" integer, "ant" integer, "state" integer, "ind" integer, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20241219020755') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateAis (20241219021809)
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE TABLE "ais" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20241219021809') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mcommit transaction[0m
Migrating to DropTables (20241219035148)
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20241219035148') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "environment"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
AiTablesControllerTest: test_should_get_index
---------------------------------------------
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
AiTablesControllerTest: test_should_destroy_ai_table
----------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
AiTablesControllerTest: test_should_update_ai_table
---------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
AiTablesControllerTest: test_should_create_ai_table
---------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------
AiTablesControllerTest: test_should_get_edit
--------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
AiTablesControllerTest: test_should_get_new
-------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
AiTablesControllerTest: test_should_show_ai_table
-------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
EconTablesControllerTest: test_should_get_index
-----------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
EconTablesControllerTest: test_should_destroy_econ_table
--------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
EconTablesControllerTest: test_should_update_econ_table
-------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
EconTablesControllerTest: test_should_create_econ_table
-------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
EconTablesControllerTest: test_should_get_edit
----------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
EconTablesControllerTest: test_should_get_new
---------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
EconTablesControllerTest: test_should_show_econ_table
-----------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
EconTablesControllerTest: test_should_update_econ_table
-------------------------------------------------------
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
EconTablesControllerTest: test_should_get_index
-----------------------------------------------
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
EconTablesControllerTest: test_should_get_edit
----------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
EconTablesControllerTest: test_should_create_econ_table
-------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
EconTablesControllerTest: test_should_show_econ_table
-----------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
EconTablesControllerTest: test_should_get_new
---------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
EconTablesControllerTest: test_should_destroy_econ_table
--------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
AiTablesControllerTest: test_should_update_ai_table
---------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
AiTablesControllerTest: test_should_get_index
---------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------
AiTablesControllerTest: test_should_get_edit
--------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
AiTablesControllerTest: test_should_create_ai_table
---------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
AiTablesControllerTest: test_should_show_ai_table
-------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
AiTablesControllerTest: test_should_get_new
-------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
AiTablesControllerTest: test_should_destroy_ai_table
----------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
AiTablesControllerTest: test_should_get_new
-------------------------------------------
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
AiTablesControllerTest: test_should_create_ai_table
---------------------------------------------------
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
AiTablesControllerTest: test_should_destroy_ai_table
----------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------
AiTablesControllerTest: test_should_get_edit
--------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
AiTablesControllerTest: test_should_show_ai_table
-------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
AiTablesControllerTest: test_should_get_index
---------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
AiTablesControllerTest: test_should_update_ai_table
---------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
EconTablesControllerTest: test_should_get_new
---------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
EconTablesControllerTest: test_should_create_econ_table
-------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
EconTablesControllerTest: test_should_destroy_econ_table
--------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
EconTablesControllerTest: test_should_get_edit
----------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
EconTablesControllerTest: test_should_show_econ_table
-----------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
EconTablesControllerTest: test_should_get_index
-----------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
EconTablesControllerTest: test_should_update_econ_table
-------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
EconTablesControllerTest: test_should_update_econ_table
-------------------------------------------------------
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
EconTablesControllerTest: test_should_create_econ_table
-------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
EconTablesControllerTest: test_should_show_econ_table
-----------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
EconTablesControllerTest: test_should_destroy_econ_table
--------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
EconTablesControllerTest: test_should_get_edit
----------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
EconTablesControllerTest: test_should_get_new
---------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.4ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
EconTablesControllerTest: test_should_get_index
-----------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
AiTablesControllerTest: test_should_update_ai_table
---------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
AiTablesControllerTest: test_should_create_ai_table
---------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
AiTablesControllerTest: test_should_show_ai_table
-------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
AiTablesControllerTest: test_should_destroy_ai_table
----------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------
AiTablesControllerTest: test_should_get_edit
--------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
AiTablesControllerTest: test_should_get_new
-------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
AiTablesControllerTest: test_should_get_index
---------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
EconTablesControllerTest: test_should_get_index
-----------------------------------------------
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
EconTablesControllerTest: test_should_show_econ_table
-----------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
EconTablesControllerTest: test_should_create_econ_table
-------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
EconTablesControllerTest: test_should_get_new
---------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
EconTablesControllerTest: test_should_update_econ_table
-------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
EconTablesControllerTest: test_should_destroy_econ_table
--------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
EconTablesControllerTest: test_should_get_edit
----------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
AiTablesControllerTest: test_should_get_index
---------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
AiTablesControllerTest: test_should_show_ai_table
-------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
AiTablesControllerTest: test_should_create_ai_table
---------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
AiTablesControllerTest: test_should_get_new
-------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
AiTablesControllerTest: test_should_update_ai_table
---------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
AiTablesControllerTest: test_should_destroy_ai_table
----------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------
AiTablesControllerTest: test_should_get_edit
--------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
AiTablesControllerTest: test_should_create_ai_table
---------------------------------------------------
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------
AiTablesControllerTest: test_should_get_edit
--------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
AiTablesControllerTest: test_should_show_ai_table
-------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
AiTablesControllerTest: test_should_update_ai_table
---------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
AiTablesControllerTest: test_should_destroy_ai_table
----------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
AiTablesControllerTest: test_should_get_new
-------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
AiTablesControllerTest: test_should_get_index
---------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
EconTablesControllerTest: test_should_create_econ_table
-------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
EconTablesControllerTest: test_should_get_edit
----------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
EconTablesControllerTest: test_should_show_econ_table
-----------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
EconTablesControllerTest: test_should_update_econ_table
-------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
EconTablesControllerTest: test_should_destroy_econ_table
--------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
EconTablesControllerTest: test_should_get_new
---------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
EconTablesControllerTest: test_should_get_index
-----------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
AiTablesControllerTest: test_should_create_ai_table
---------------------------------------------------
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
AiTablesControllerTest: test_should_get_index
---------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
AiTablesControllerTest: test_should_get_new
-------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------
AiTablesControllerTest: test_should_destroy_ai_table
----------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
AiTablesControllerTest: test_should_update_ai_table
---------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------
AiTablesControllerTest: test_should_get_edit
--------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
AiTablesControllerTest: test_should_show_ai_table
-------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
EconTablesControllerTest: test_should_create_econ_table
-------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
EconTablesControllerTest: test_should_get_index
-----------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------
EconTablesControllerTest: test_should_get_new
---------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------------
EconTablesControllerTest: test_should_destroy_econ_table
--------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------------
EconTablesControllerTest: test_should_update_econ_table
-------------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------
EconTablesControllerTest: test_should_get_edit
----------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
EconTablesControllerTest: test_should_show_econ_table
-----------------------------------------------------
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.2ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.2ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.2ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.2ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.7ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.4ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.2ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.3ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.2ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.2ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.2ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.3ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.2ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.2ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.2ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.2ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.3ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.2ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.3ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.4ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.9ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.9ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (1.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.9ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.3ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.2ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.3ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.2ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "schema_sha1"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.2ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.1ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.2ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.2ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.1ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mPRAGMA foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = ON[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = OFF[0m
  [1m[36mFixtures Load (0.8ms)[0m  [1m[31mDELETE FROM "ai_tables";
DELETE FROM "ais";
DELETE FROM "econ_tables";
DELETE FROM "econs";
INSERT INTO "ai_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 20, 50, 70, 80, 60);
INSERT INTO "ais" VALUES ();
INSERT INTO "ais" VALUES ();
INSERT INTO "econ_tables" ("id", "acronym", "name", "imgUrl", "gross", "trade", "expenditure", "reserve", "status", "co", "iso", "ant", "state", "ind") VALUES (980190962, 'XYZ', 'Sample Econ Table', 'sample.jpg', 1000, 500, 300, 200, 'Stable', 20, 50, 70, 80, 60);
INSERT INTO "econs" VALUES ();
INSERT INTO "econs" VALUES ()[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA defer_foreign_keys = 0[0m
  [1m[35m (0.0ms)[0m  [1m[35mPRAGMA foreign_keys = 1[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[31mrollback transaction[0m
